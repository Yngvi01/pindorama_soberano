import { PrismaClient } from '@prisma/client'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Iniciando seed do banco de dados...')

  // Verificar se j√° existe um admin
  const existingAdmin = await prisma.user.findFirst({
    where: { role: 'admin' }
  })

  if (existingAdmin) {
    console.log('‚úÖ Administrador j√° existe no sistema')
    console.log(`üìß Email: ${existingAdmin.email}`)
  } else {
    // Criar usu√°rio administrador padr√£o
    const adminPassword = 'admin123'
    const hashedPassword = await bcrypt.hash(adminPassword, 12)

    const admin = await prisma.user.create({
      data: {
        name: 'Administrador',
        email: 'admin@pindorama.com',
        password: hashedPassword,
        role: 'admin',
      },
    })

    console.log('‚úÖ Usu√°rio administrador criado com sucesso!')
    console.log('üìß Email: admin@pindorama.com')
    console.log('üîë Senha: admin123')
    console.log('‚ö†Ô∏è  IMPORTANTE: Altere a senha ap√≥s o primeiro login!')
  }

  // Verificar e criar usu√°rios de exemplo
  const existingUsers = await prisma.user.count({
    where: {
      email: {
        in: ['joao@exemplo.com', 'maria@exemplo.com', 'pedro@exemplo.com']
      }
    }
  })

  if (existingUsers === 0) {
    const userPassword = 'user123'
    const hashedUserPassword = await bcrypt.hash(userPassword, 12)

    const users = await prisma.user.createMany({
      data: [
        {
          name: 'Jo√£o Silva',
          email: 'joao@exemplo.com',
          password: hashedUserPassword,
          role: 'user',
        },
        {
          name: 'Maria Santos',
          email: 'maria@exemplo.com',
          password: hashedUserPassword,
          role: 'user',
        },
        {
          name: 'Pedro Oliveira',
          email: 'pedro@exemplo.com',
          password: hashedUserPassword,
          role: 'user',
        },
      ],
    })

    console.log(`‚úÖ ${users.count} usu√°rios de exemplo criados`)
    console.log('üîë Senha para todos os usu√°rios de exemplo: user123')
  } else {
    console.log('‚úÖ Usu√°rios de exemplo j√° existem')
  }

  // Verificar e criar produtos de exemplo
  const existingProducts = await prisma.product.count()

  if (existingProducts === 0) {
    const products = await prisma.product.createMany({
      data: [
        {
          name: 'A√ßa√≠ Premium 500ml',
          description: 'A√ßa√≠ natural premium, sem conservantes, direto da Amaz√¥nia',
          price: 15.90,
          category: 'A√ßa√≠',
          stock: 50,
          active: true,
        },
        {
          name: 'Cupua√ßu Polpa 1kg',
          description: 'Polpa de cupua√ßu 100% natural, rica em vitaminas',
          price: 25.50,
          category: 'Frutas',
          stock: 30,
          active: true,
        },
        {
          name: 'Guaran√° em P√≥ 100g',
          description: 'Guaran√° em p√≥ natural, energ√©tico da Amaz√¥nia',
          price: 18.00,
          category: 'Suplementos',
          stock: 25,
          active: true,
        },
        {
          name: 'Castanha do Par√° 200g',
          description: 'Castanha do Par√° selecionada, rica em sel√™nio',
          price: 22.90,
          category: 'Castanhas',
          stock: 40,
          active: true,
        },
        {
          name: 'Mel de Abelha Silvestre 300g',
          description: 'Mel puro de abelhas silvestres da regi√£o amaz√¥nica',
          price: 28.00,
          category: 'Mel',
          stock: 20,
          active: true,
        },
        {
          name: 'Farinha de Tapioca 500g',
          description: 'Farinha de tapioca tradicional, sem gl√∫ten',
          price: 8.50,
          category: 'Farinhas',
          stock: 60,
          active: true,
        },
      ],
    })

    console.log(`‚úÖ ${products.count} produtos de exemplo criados`)
  } else {
    console.log('‚úÖ Produtos de exemplo j√° existem')
  }

  // Verificar e criar posts de exemplo
  const existingPosts = await prisma.post.count()

  if (existingPosts === 0) {
    const posts = await prisma.post.createMany({
      data: [
        {
          title: 'A Capivara Revolucion√°ria: S√≠mbolo da Resist√™ncia Brasileira',
          slug: 'capivara-revolucionaria',
          summary: 'Descubra como a capivara se tornou um √≠cone da luta pela soberania nacional e liberdade do povo brasileiro.',
          content: 'A capivara, maior roedor do mundo e s√≠mbolo da fauna brasileira, transcendeu sua natureza pac√≠fica para se tornar um √≠cone revolucion√°rio. Este artigo explora como este animal genuinamente brasileiro representa a resist√™ncia cultural e a luta pela soberania nacional. Atrav√©s de sua presen√ßa marcante na cultura popular e nas redes sociais, a capivara simboliza a tranquilidade e determina√ß√£o do povo brasileiro diante dos desafios. Sua capacidade de adapta√ß√£o e conviv√™ncia harmoniosa com outras esp√©cies reflete os valores de diversidade e inclus√£o que caracterizam nossa na√ß√£o.',
          author: 'Equipe Pindorama',
          category: 'Hist√≥ria',
          readTime: '5 min',
          published: true,
          publishedAt: new Date('2024-01-15'),
        },
        {
          title: 'Pindorama: O Nome Verdadeiro da Nossa Terra',
          slug: 'pindorama-origem',
          summary: 'Explore a origem ind√≠gena do nome Pindorama e seu significado profundo para a identidade nacional.',
          content: 'Pindorama, palavra de origem tupi que significa "terra das palmeiras", √© o nome ancestral do territ√≥rio que hoje conhecemos como Brasil. Este artigo mergulha nas ra√≠zes etimol√≥gicas e culturais deste termo, revelando como os povos origin√°rios j√° possu√≠am uma vis√£o integrada e sustent√°vel do territ√≥rio. O nome Pindorama carrega em si a sabedoria milenar dos povos ind√≠genas, que viam a terra n√£o como propriedade, mas como lar compartilhado. Compreender este conceito √© fundamental para resgatar nossa verdadeira identidade nacional e construir um futuro mais justo e sustent√°vel.',
          author: 'Dr. Jo√£o Silva',
          category: 'Cultura',
          readTime: '7 min',
          published: true,
          publishedAt: new Date('2024-01-10'),
        },
        {
          title: 'Soberania Nacional: Construindo um Brasil Independente',
          slug: 'soberania-nacional',
          summary: 'Reflex√µes sobre a import√¢ncia da soberania nacional e como cada cidad√£o pode contribuir para um pa√≠s mais livre.',
          content: 'A soberania nacional vai al√©m da independ√™ncia pol√≠tica formal. Este artigo analisa os pilares fundamentais da verdadeira soberania: econ√¥mica, cultural, tecnol√≥gica e alimentar. Discutimos como o fortalecimento das institui√ß√µes democr√°ticas, o desenvolvimento de tecnologias nacionais e a valoriza√ß√£o da cultura brasileira s√£o essenciais para construir um pa√≠s verdadeiramente independente. Cada cidad√£o tem papel fundamental neste processo, seja atrav√©s do consumo consciente, da participa√ß√£o pol√≠tica ativa ou da preserva√ß√£o de nossas tradi√ß√µes culturais.',
          author: 'Maria Santos',
          category: 'Pol√≠tica',
          readTime: '8 min',
          published: true,
          publishedAt: new Date('2024-01-05'),
        },
        {
          title: 'Arte como Forma de Resist√™ncia Cultural',
          slug: 'arte-resistencia',
          summary: 'Como a arte e o design podem ser ferramentas poderosas na preserva√ß√£o e promo√ß√£o da cultura brasileira.',
          content: 'A arte sempre foi uma forma de resist√™ncia e express√£o cultural. No contexto brasileiro, manifesta√ß√µes art√≠sticas como o grafite, a m√∫sica popular, a literatura de cordel e as artes visuais desempenham papel crucial na preserva√ß√£o da identidade nacional. Este artigo explora como artistas contempor√¢neos utilizam suas obras para questionar estruturas de poder, celebrar a diversidade cultural e promover a consci√™ncia social. A arte brasileira √© um patrim√¥nio vivo que conecta passado e futuro, tradi√ß√£o e inova√ß√£o.',
          author: 'Carlos Artista',
          category: 'Arte',
          readTime: '6 min',
          published: false,
        },
      ],
    })

    console.log(`‚úÖ ${posts.count} posts de exemplo criados`)
  } else {
    console.log('‚úÖ Posts de exemplo j√° existem')
  }

  // Criar pedidos de exemplo
  const existingOrders = await prisma.order.count()
  if (existingOrders === 0) {
    // Buscar usu√°rios e produtos para criar pedidos
    const users = await prisma.user.findMany({
      where: { role: 'user' },
      take: 2
    })
    
    const products = await prisma.product.findMany({ take: 4 })
    
    if (users.length > 0 && products.length > 0) {
      // Pedido 1 - Entregue
      await prisma.order.create({
        data: {
          userId: users[0].id,
          status: 'delivered',
          subtotal: 189.90,
          shipping: 15.90,
          tax: 0,
          total: 205.80,
          paymentMethod: 'credit_card',
          paymentStatus: 'paid',
          shippingAddress: {
            street: 'Rua das Flores, 123',
            city: 'S√£o Paulo',
            state: 'SP',
            zipCode: '01234-567',
            country: 'Brasil'
          },
          trackingCode: 'BR123456789',
          notes: 'Entrega r√°pida solicitada',
          items: {
            create: [
              {
                productId: products[0].id,
                quantity: 1,
                price: products[0].price,
                size: 'M',
                color: 'Azul'
              },
              {
                productId: products[1].id,
                quantity: 2,
                price: products[1].price,
                size: 'G',
                color: 'Preto'
              }
            ]
          }
        }
      })

      // Pedido 2 - Em tr√¢nsito
      await prisma.order.create({
        data: {
          userId: users[0].id,
          status: 'shipped',
          subtotal: 299.90,
          shipping: 0,
          tax: 0,
          total: 299.90,
          paymentMethod: 'pix',
          paymentStatus: 'paid',
          shippingAddress: {
            street: 'Av. Paulista, 1000',
            city: 'S√£o Paulo',
            state: 'SP',
            zipCode: '01310-100',
            country: 'Brasil'
          },
          trackingCode: 'BR987654321',
          items: {
            create: [
              {
                productId: products[2].id,
                quantity: 1,
                price: products[2].price,
                size: 'P',
                color: 'Verde'
              }
            ]
          }
        }
      })

      // Pedido 3 - Processando
      if (users.length > 1) {
        await prisma.order.create({
          data: {
            userId: users[1].id,
            status: 'processing',
            subtotal: 159.90,
            shipping: 15.90,
            tax: 0,
            total: 175.80,
            paymentMethod: 'credit_card',
            paymentStatus: 'paid',
            shippingAddress: {
              street: 'Rua do Com√©rcio, 456',
              city: 'Rio de Janeiro',
              state: 'RJ',
              zipCode: '20040-020',
              country: 'Brasil'
            },
            items: {
              create: [
                {
                  productId: products[3].id,
                  quantity: 1,
                  price: products[3].price,
                  size: 'M',
                  color: 'Branco'
                }
              ]
            }
          }
        })
      }

      console.log('‚úÖ 3 pedidos de exemplo criados')
    }
  } else {
    console.log('‚úÖ Pedidos de exemplo j√° existem')
  }
}

main()
  .catch((e) => {
    console.error('‚ùå Erro durante o seed:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })